__d(function (global, require, module, exports, _dependencyMap) {
  var isType = require(_dependencyMap[0], './isType');

  var getFunctionName = require(_dependencyMap[1], './getFunctionName');

  var assert = require(_dependencyMap[2], './assert');

  var stringify = require(_dependencyMap[3], './stringify');

  module.exports = function create(type, value, path) {
    if (isType(type)) {
      return !type.meta.identity && typeof value === 'object' && value !== null ? new type(value, path) : type(value, path);
    }

    if (process.env.NODE_ENV !== 'production') {
      path = path || [getFunctionName(type)];
      assert(value instanceof type, function () {
        return 'Invalid value ' + stringify(value) + ' supplied to ' + path.join('/');
      });
    }

    return value;
  };
});